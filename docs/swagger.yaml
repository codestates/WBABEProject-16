definitions:
  admincontroller.DeleteRequestBody:
    properties:
      pizzaId:
        type: string
    required:
    - pizzaId
    type: object
  admincontroller.OrderStatusBody:
    properties:
      id:
        type: string
      status:
        type: string
    required:
    - id
    - status
    type: object
  model.PizzaCategory:
    properties:
      _id:
        type: string
      deleted_At:
        type: string
      des:
        type: string
      l:
        type: integer
      limit_Order:
        type: integer
      m:
        type: integer
      name:
        type: string
      order_status:
        type: boolean
      updated_At:
        type: string
    type: object
  structs.RequestOrderInfo:
    properties:
      amount:
        type: integer
      personId:
        type: string
      pizzaId:
        type: string
      size:
        type: string
      status:
        type: string
    type: object
  structs.RequestOrderPersonInfo:
    properties:
      address:
        type: string
      name:
        type: string
      phone:
        type: string
      pizzaId:
        type: string
    type: object
  structs.RequestPizzaCategoryBody:
    properties:
      des:
        type: string
      l:
        type: integer
      limit_Order:
        type: integer
      m:
        type: integer
      name:
        type: string
      order_status:
        type: boolean
    required:
    - des
    - l
    - limit_Order
    - m
    - name
    - order_status
    type: object
  structs.RequestPizzaOrderBody:
    properties:
      orderInfo:
        $ref: '#/definitions/structs.RequestOrderInfo'
      personInfo:
        $ref: '#/definitions/structs.RequestOrderPersonInfo'
    type: object
info:
  contact: {}
paths:
  /admin/category:
    delete:
      consumes:
      - application/json
      description: 피자정보를 update하는 api
      parameters:
      - description: delete
        in: body
        name: DeleteRequestBody
        required: true
        schema:
          $ref: '#/definitions/admincontroller.DeleteRequestBody'
      produces:
      - application/json
      responses: {}
      summary: delete a pizza in category
    post:
      consumes:
      - application/json
      description: 피자종류를 추가하는 api
      parameters:
      - description: PizzaCategory Info
        in: body
        name: structs.RequestPizzaCategoryBody
        required: true
        schema:
          $ref: '#/definitions/structs.RequestPizzaCategoryBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PizzaCategory'
      summary: add a pizza in category
    put:
      consumes:
      - application/json
      description: 피자정보를 update하는 api
      parameters:
      - description: PizzaCategory Info
        in: body
        name: structs.RequestPizzaCategoryBody
        required: true
        schema:
          $ref: '#/definitions/structs.RequestPizzaCategoryBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PizzaCategory'
      summary: update a pizza in category
  /admin/order/update:
    post:
      consumes:
      - application/json
      description: 피자주문정보에서 주문접수, 조리, 배달완료 등 상태를 update하는 API
      parameters:
      - description: update a status in order
        in: body
        name: OrderStatusBody
        required: true
        schema:
          $ref: '#/definitions/admincontroller.OrderStatusBody'
      produces:
      - application/json
      responses: {}
      summary: update a status in order
  /health:
    get:
      description: health check
      responses: {}
      summary: health check
  /pizza/order:
    post:
      consumes:
      - application/json
      description: 피자를 주문하는 API
      parameters:
      - description: RequestPizzaOrderBody Info
        in: body
        name: structs.RequestPizzaOrderBody
        required: true
        schema:
          $ref: '#/definitions/structs.RequestPizzaOrderBody'
      produces:
      - application/json
      responses: {}
      summary: order a pizza
  /pizza/order/{name}/{phone}:
    get:
      consumes:
      - application/json
      description: 이름과 전화번호를 통해서 주문내역을 확인할 수 있는 API
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        type: string
      - description: user phone
        in: path
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 이름과 전화번호를 통해서 주문내역을 확인할 수 있는 API
  /pizza/order/id/{id}:
    get:
      consumes:
      - application/json
      description: 주문번호를 통해서 주문정보를 받아볼 수 있는 API
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 주문번호를 통해서 주문정보를 받아볼 수 있는 API
swagger: "2.0"
