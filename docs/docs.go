// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/category": {
            "put": {
                "description": "피자정보를 update하는 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update a pizza in category",
                "parameters": [
                    {
                        "description": "PizzaCategory Info",
                        "name": "model.PizzaCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PizzaCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PizzaCategory"
                        }
                    }
                }
            },
            "post": {
                "description": "피자종류를 추가하는 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add a pizza in category",
                "parameters": [
                    {
                        "description": "PizzaCategory Info",
                        "name": "model.PizzaCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PizzaCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PizzaCategory"
                        }
                    }
                }
            },
            "delete": {
                "description": "피자정보를 update하는 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete a pizza in category",
                "parameters": [
                    {
                        "description": "delete",
                        "name": "DeleteRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.DeleteRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admin/order/update": {
            "post": {
                "description": "피자주문정보에서 주문접수, 조리, 배달완료 등 상태를 update하는 API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update a status in order",
                "parameters": [
                    {
                        "description": "update a status in order",
                        "name": "OrderStatusBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrderStatusBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/health": {
            "get": {
                "description": "health check",
                "summary": "health check",
                "responses": {}
            }
        },
        "/pizza/order": {
            "post": {
                "description": "피자를 주문하는 API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "order a pizza",
                "parameters": [
                    {
                        "description": "PizzaOrderBody Info",
                        "name": "PizzaOrderBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.PizzaOrderBody"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "controller.DeleteRequestBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.OrderStatusBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.PizzaOrderBody": {
            "type": "object",
            "properties": {
                "orderInfo": {
                    "$ref": "#/definitions/model.OrderInfo"
                },
                "personInfo": {
                    "$ref": "#/definitions/model.OrderPersonInfo"
                }
            }
        },
        "model.OrderInfo": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "pizza_id": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.OrderPersonInfo": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pizzaId": {
                    "type": "string"
                }
            }
        },
        "model.PizzaCategory": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deleted_At": {
                    "type": "string"
                },
                "des": {
                    "type": "string"
                },
                "l": {
                    "type": "integer"
                },
                "limit_Order": {
                    "type": "integer"
                },
                "m": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "order_status": {
                    "type": "boolean"
                },
                "updated_At": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
